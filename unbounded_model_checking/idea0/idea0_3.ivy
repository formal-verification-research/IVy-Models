#lang ivy1.7

type dir = {nm,n1,em,e1,sm,s1,wm,w1,x}

var sent4 : dir
var sent3 : dir
var sent2 : dir
var sent1 : dir
var sent0 : dir

var test : bool

object spec = {

  after init {
    sent4 := x;
    sent3 := x;
    sent2 := x;
    sent1 := x;
    sent0 := x;
    test := false;
  }

} #end spec


object router = {

  action routeWherever = {
    sent4 := sent3;
    sent3 := sent2;
    sent2 := sent1;
    sent1 := sent0;
    sent0 := *;
    
    if sent1 = w1 {
      sent0 := s1;
    };
    
  } #end routeWherever
  
  export routeWherever

} #end router


object flit = {

  action testThing = {
  
    if sent1 = w1 & sent0 = n1 & ~test {
      test := true;
    };
  
  } #end testThing
  
  export testThing

} #end flit

invariant ~(sent4 = n1 & sent3 = e1 & sent2 = s1 & sent1 = w1 & sent0 = n1)
invariant ~test


# attribute method = mc