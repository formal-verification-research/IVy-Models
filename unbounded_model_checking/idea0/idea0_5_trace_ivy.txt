
Isolate this:

    The inductive invariant consists of the following conjectures:
        idea0_5.ivy: line 71: invar3
        idea0_5.ivy: line 73: invar4

    The following action implementations are present:
        idea0_5.ivy: line 59: implementation of flit.testThing
        idea0_5.ivy: line 33: implementation of router.routeWherever

    The following initializers are present:
        idea0_5.ivy: line 18: spec.init[after2]

    Initialization must establish the invariant
        idea0_5.ivy: line 71: invar3 ... PASS
        idea0_5.ivy: line 73: invar4 ... PASS

    Any assertions in initializers must be checked ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:flit.testThing
            idea0_5.ivy: line 71: invar3 ... PASS
            idea0_5.ivy: line 73: invar4 ... PASS
        (internal) ext:router.routeWherever
            idea0_5.ivy: line 71: invar3 ... PASS
            idea0_5.ivy: line 73: invar4 ... FAIL
searching for a small model... done
[
    28:number = 28
    29:number = 29
    1:number = 1
    sent3 = n1
    moves = 28
    sent4 = nm
    sent1 = n1
    delivered = false
    sent0 = n1
    sent2 = n1
]
call router.routeWherever

{
    idea0_5.ivy: line 34: sent4 := sent3

    [
        sent4 = n1
    ]
    idea0_5.ivy: line 35: sent3 := sent2

    idea0_5.ivy: line 36: sent2 := sent1

    idea0_5.ivy: line 37: sent1 := sent0

    idea0_5.ivy: line 38: sent0 := *

    idea0_5.ivy: line 44: moves := moves + 1

    [
        moves = 29
    ]
}


