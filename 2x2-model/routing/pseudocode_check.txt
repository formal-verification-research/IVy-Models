
Isolate this:

    The inductive invariant consists of the following conjectures:
        pseudocode.ivy: line 175: spec.conj3
        pseudocode.ivy: line 249: flit.conj6
        pseudocode.ivy: line 250: flit.conj7
        pseudocode.ivy: line 252: flit.conj8
        pseudocode.ivy: line 253: flit.conj9
        pseudocode.ivy: line 255: flit.conj10
        pseudocode.ivy: line 258: flit.conj11
        pseudocode.ivy: line 259: flit.conj12
        pseudocode.ivy: line 342: node.conj13(X:coord, Y:coord)
        pseudocode.ivy: line 343: node.conj14(X:coord, Y:coord)
        pseudocode.ivy: line 345: node.conj15(X:coord, Y:coord)
        pseudocode.ivy: line 346: node.conj16(X:coord, Y:coord)
        pseudocode.ivy: line 348: node.conj17(X:coord, Y:coord)
        pseudocode.ivy: line 349: node.conj18(X:coord, Y:coord)
        pseudocode.ivy: line 359: invar19
        pseudocode.ivy: line 360: invar20
        pseudocode.ivy: line 362: invar21
        pseudocode.ivy: line 364: invar22
        pseudocode.ivy: line 365: invar23

    The following action implementations are present:
        pseudocode.ivy: line 227: implementation of flit.get_distances
        pseudocode.ivy: line 212: implementation of flit.send
        pseudocode.ivy: line 276: implementation of node.route
        pseudocode.ivy: line 93: implementation of spec.check
        pseudocode.ivy: line 34: implementation of spec.confirm_links
        pseudocode.ivy: line 157: implementation of spec.go_east
        pseudocode.ivy: line 164: implementation of spec.go_north
        pseudocode.ivy: line 150: implementation of spec.go_south
        pseudocode.ivy: line 143: implementation of spec.go_west
        pseudocode.ivy: line 171: implementation of spec.is_delivered
        pseudocode.ivy: line 117: implementation of spec.second_check

    The following action monitors are present:
        pseudocode.ivy: line 217: monitor of flit.send
        pseudocode.ivy: line 83: monitor of spec.check
        pseudocode.ivy: line 83: monitor of spec.second_check

    The following initializers are present:
        pseudocode.ivy: line 194: flit.init[after4]
        pseudocode.ivy: line 20: spec.init[after2]

    Initialization must establish the invariant
        pseudocode.ivy: line 175: spec.conj3 ... PASS
        pseudocode.ivy: line 249: flit.conj6 ... PASS
        pseudocode.ivy: line 250: flit.conj7 ... PASS
        pseudocode.ivy: line 252: flit.conj8 ... PASS
        pseudocode.ivy: line 253: flit.conj9 ... PASS
        pseudocode.ivy: line 255: flit.conj10 ... PASS
        pseudocode.ivy: line 258: flit.conj11 ... PASS
        pseudocode.ivy: line 259: flit.conj12 ... PASS
        pseudocode.ivy: line 342: node.conj13(X:coord, Y:coord) ... PASS
        pseudocode.ivy: line 343: node.conj14(X:coord, Y:coord) ... PASS
        pseudocode.ivy: line 345: node.conj15(X:coord, Y:coord) ... PASS
        pseudocode.ivy: line 346: node.conj16(X:coord, Y:coord) ... PASS
        pseudocode.ivy: line 348: node.conj17(X:coord, Y:coord) ... PASS
        pseudocode.ivy: line 349: node.conj18(X:coord, Y:coord) ... PASS
        pseudocode.ivy: line 359: invar19 ... PASS
        pseudocode.ivy: line 360: invar20 ... PASS
        pseudocode.ivy: line 362: invar21 ... PASS
        pseudocode.ivy: line 364: invar22 ... PASS
        pseudocode.ivy: line 365: invar23 ... PASS

    Any assertions in initializers must be checked ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:flit.send
            pseudocode.ivy: line 175: spec.conj3 ... PASS
            pseudocode.ivy: line 249: flit.conj6 ... PASS
            pseudocode.ivy: line 250: flit.conj7 ... PASS
            pseudocode.ivy: line 252: flit.conj8 ... PASS
            pseudocode.ivy: line 253: flit.conj9 ... PASS
            pseudocode.ivy: line 255: flit.conj10 ... PASS
            pseudocode.ivy: line 258: flit.conj11 ... PASS
            pseudocode.ivy: line 259: flit.conj12 ... PASS
            pseudocode.ivy: line 342: node.conj13(X:coord, Y:coord) ... PASS
            pseudocode.ivy: line 343: node.conj14(X:coord, Y:coord) ... PASS
            pseudocode.ivy: line 345: node.conj15(X:coord, Y:coord) ... PASS
            pseudocode.ivy: line 346: node.conj16(X:coord, Y:coord) ... PASS
            pseudocode.ivy: line 348: node.conj17(X:coord, Y:coord) ... PASS
            pseudocode.ivy: line 349: node.conj18(X:coord, Y:coord) ... PASS
            pseudocode.ivy: line 359: invar19 ... PASS
            pseudocode.ivy: line 360: invar20 ... PASS
            pseudocode.ivy: line 362: invar21 ... PASS
            pseudocode.ivy: line 364: invar22 ... PASS
            pseudocode.ivy: line 365: invar23 ... FAIL
searching for a small model... done

Trace follows...
********************************************************************************
    node.this_node_y(0,0) = 0
    node.this_node_y(0,3) = 3
    node.this_node_y(0,1) = 1
    node.this_node_y(0,2) = 2
    node.this_node_y(3,0) = 0
    node.this_node_y(3,3) = 3
    node.this_node_y(3,1) = 1
    node.this_node_y(3,2) = 2
    node.this_node_y(1,0) = 0
    node.this_node_y(1,3) = 3
    node.this_node_y(1,1) = 1
    node.this_node_y(1,2) = 2
    node.this_node_y(2,0) = 0
    node.this_node_y(2,3) = 3
    node.this_node_y(2,1) = 1
    node.this_node_y(2,2) = 2
    2:coord = 2
    flit.dest_x = 2
    1:coord = 1
    0:coord - 0 = 0
    0:coord - 3 = 1
    0:coord - 1 = 3
    0:coord - 2 = 2
    3:coord - 0 = 3
    3:coord - 3 = 0
    3:coord - 1 = 2
    3:coord - 2 = 1
    1:coord - 0 = 1
    1:coord - 3 = 2
    1:coord - 1 = 0
    1:coord - 2 = 3
    2:coord - 0 = 2
    2:coord - 3 = 3
    2:coord - 1 = 1
    2:coord - 2 = 0
    flit.dest_y = 1
    0:coord + 0 = 0
    0:coord + 3 = 3
    0:coord + 1 = 1
    0:coord + 2 = 2
    3:coord + 0 = 3
    3:coord + 3 = 2
    3:coord + 1 = 0
    3:coord + 2 = 1
    1:coord + 0 = 1
    1:coord + 3 = 0
    1:coord + 1 = 2
    1:coord + 2 = 3
    2:coord + 0 = 2
    2:coord + 3 = 1
    2:coord + 1 = 3
    2:coord + 2 = 0
    node.this_node_x(0,0) = 0
    node.this_node_x(0,3) = 0
    node.this_node_x(0,1) = 0
    node.this_node_x(0,2) = 0
    node.this_node_x(3,0) = 3
    node.this_node_x(3,3) = 3
    node.this_node_x(3,1) = 3
    node.this_node_x(3,2) = 3
    node.this_node_x(1,0) = 1
    node.this_node_x(1,3) = 1
    node.this_node_x(1,1) = 1
    node.this_node_x(1,2) = 1
    node.this_node_x(2,0) = 2
    node.this_node_x(2,3) = 2
    node.this_node_x(2,1) = 2
    node.this_node_x(2,2) = 2
    0:coord < 3 = true
    0:coord < 1 = true
    0:coord < 2 = true
    1:coord < 3 = true
    1:coord < 2 = true
    2:coord < 3 = true
    0:coord < 0 = false
    3:coord < 0 = false
    3:coord < 3 = false
    3:coord < 1 = false
    3:coord < 2 = false
    1:coord < 0 = false
    1:coord < 1 = false
    2:coord < 0 = false
    2:coord < 1 = false
    2:coord < 2 = false
    3:coord = 3
    0:coord = 0
    spec.north_ok = false
    spec.can_route = true
    node.east_free(0,0) = false
    node.east_free(0,3) = false
    node.east_free(0,1) = false
    node.east_free(0,2) = false
    node.east_free(3,0) = false
    node.east_free(3,3) = false
    node.east_free(3,1) = false
    node.east_free(3,2) = false
    node.east_free(1,0) = false
    node.east_free(1,3) = false
    node.east_free(1,1) = false
    node.east_free(1,2) = false
    node.east_free(2,0) = false
    node.east_free(2,3) = false
    node.east_free(2,1) = false
    node.east_free(2,2) = false
    node.has_flit(2,0) = true
    node.has_flit(0,0) = false
    node.has_flit(0,3) = false
    node.has_flit(0,1) = false
    node.has_flit(0,2) = false
    node.has_flit(3,0) = false
    node.has_flit(3,3) = false
    node.has_flit(3,1) = false
    node.has_flit(3,2) = false
    node.has_flit(1,0) = false
    node.has_flit(1,3) = false
    node.has_flit(1,1) = false
    node.has_flit(1,2) = false
    node.has_flit(2,3) = false
    node.has_flit(2,1) = false
    node.has_flit(2,2) = false
    node.north_free(0,0) = false
    node.north_free(0,3) = false
    node.north_free(0,1) = false
    node.north_free(0,2) = false
    node.north_free(3,0) = false
    node.north_free(3,3) = false
    node.north_free(3,1) = false
    node.north_free(3,2) = false
    node.north_free(1,0) = false
    node.north_free(1,3) = false
    node.north_free(1,1) = false
    node.north_free(1,2) = false
    node.north_free(2,0) = false
    node.north_free(2,3) = false
    node.north_free(2,1) = false
    node.north_free(2,2) = false
    flit.current_y = 0
    spec.east_ok = false
    flit.delivered = false
    flit.traveling = east
    node.west_free(0,0) = false
    node.west_free(0,3) = false
    node.west_free(0,1) = false
    node.west_free(0,2) = false
    node.west_free(3,0) = false
    node.west_free(3,3) = false
    node.west_free(3,1) = false
    node.west_free(3,2) = false
    node.west_free(1,0) = false
    node.west_free(1,3) = false
    node.west_free(1,1) = false
    node.west_free(1,2) = false
    node.west_free(2,0) = false
    node.west_free(2,3) = false
    node.west_free(2,1) = false
    node.west_free(2,2) = false
    spec.south_ok = false
    flit.current_x = 2
    node.south_free(0,0) = false
    node.south_free(0,3) = false
    node.south_free(0,1) = false
    node.south_free(0,2) = false
    node.south_free(3,0) = false
    node.south_free(3,3) = false
    node.south_free(3,1) = false
    node.south_free(3,2) = false
    node.south_free(1,0) = false
    node.south_free(1,3) = false
    node.south_free(1,1) = false
    node.south_free(1,2) = false
    node.south_free(2,0) = false
    node.south_free(2,3) = false
    node.south_free(2,1) = false
    node.south_free(2,2) = false
    spec.west_ok = false
    flit.y_distance = 1
    flit.x_distance = 1
pseudocode.ivy: line 213: assume ~flit.delivered
pseudocode.ivy: line 214: call node.route(flit.current_x, flit.current_y)
    prm:Y = 0
    prm:X = 2
pseudocode.ivy: line 278: call spec.confirm_links
pseudocode.ivy: line 35: node.north_free(X,Y) := false
pseudocode.ivy: line 36: node.east_free(X,Y) := false
pseudocode.ivy: line 37: node.south_free(X,Y) := false
pseudocode.ivy: line 38: node.west_free(X,Y) := false
pseudocode.ivy: line 45: node.north_free(0,0) := true
    node.north_free(0,0) = true
pseudocode.ivy: line 46: node.south_free(0,1) := true
    node.south_free(0,1) = true
pseudocode.ivy: line 48: node.east_free(0,0) := true
    node.east_free(0,0) = true
pseudocode.ivy: line 49: node.west_free(1,0) := true
    node.west_free(1,0) = true
pseudocode.ivy: line 51: node.east_free(0,1) := true
    node.east_free(0,1) = true
pseudocode.ivy: line 52: node.west_free(1,1) := true
    node.west_free(1,1) = true
pseudocode.ivy: line 54: node.north_free(0,1) := true
    node.north_free(0,1) = true
pseudocode.ivy: line 55: node.south_free(0,2) := true
    node.south_free(0,2) = true
pseudocode.ivy: line 57: node.south_free(1,1) := true
    node.south_free(1,1) = true
pseudocode.ivy: line 58: node.north_free(1,0) := true
    node.north_free(1,0) = true
pseudocode.ivy: line 60: node.east_free(0,2) := true
    node.east_free(0,2) = true
pseudocode.ivy: line 61: node.west_free(1,2) := true
    node.west_free(1,2) = true
pseudocode.ivy: line 63: node.east_free(1,0) := true
    node.east_free(1,0) = true
pseudocode.ivy: line 64: node.west_free(2,0) := true
    node.west_free(2,0) = true
pseudocode.ivy: line 66: node.north_free(1,1) := true
    node.north_free(1,1) = true
pseudocode.ivy: line 67: node.south_free(1,2) := true
    node.south_free(1,2) = true
pseudocode.ivy: line 69: node.east_free(1,1) := true
    node.east_free(1,1) = true
pseudocode.ivy: line 70: node.west_free(2,1) := true
    node.west_free(2,1) = true
pseudocode.ivy: line 72: node.east_free(1,2) := true
    node.east_free(1,2) = true
pseudocode.ivy: line 73: node.west_free(2,2) := true
    node.west_free(2,2) = true
pseudocode.ivy: line 75: node.north_free(2,0) := true
    node.north_free(2,0) = true
pseudocode.ivy: line 76: node.south_free(2,1) := true
    node.south_free(2,1) = true
pseudocode.ivy: line 78: node.north_free(2,1) := true
    node.north_free(2,1) = true
pseudocode.ivy: line 79: node.south_free(2,2) := true
    node.south_free(2,2) = true
pseudocode.ivy: line 279: call spec.check
pseudocode.ivy: line 84: spec.north_ok := false
pseudocode.ivy: line 85: spec.east_ok := false
pseudocode.ivy: line 86: spec.south_ok := false
pseudocode.ivy: line 87: spec.west_ok := false
pseudocode.ivy: line 113: spec.north_ok := true
    spec.north_ok = true
pseudocode.ivy: line 314: call spec.go_north
pseudocode.ivy: line 165: assert ~flit.delivered
pseudocode.ivy: line 166: node.has_flit(flit.current_x,flit.current_y) := false
    node.has_flit(2,0) = false
pseudocode.ivy: line 167: flit.current_y := flit.current_y + 1
    flit.current_y = 1
pseudocode.ivy: line 168: node.has_flit(flit.current_x,flit.current_y) := true
    node.has_flit(2,1) = true
pseudocode.ivy: line 315: flit.traveling := north
    flit.traveling = north
pseudocode.ivy: line 218: call ext:flit.get_distances
pseudocode.ivy: line 235: flit.x_distance := 0:coord
    flit.x_distance = 0
pseudocode.ivy: line 244: flit.y_distance := 0:coord
    flit.y_distance = 0
pseudocode.ivy: line 220: call ext:spec.is_delivered
pseudocode.ivy: line 172: flit.delivered := true
    flit.delivered = true
pseudocode.ivy: line 221: assert flit.delivered
