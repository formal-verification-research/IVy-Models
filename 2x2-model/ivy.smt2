; benchmark generated from python API
(set-info :status unknown)
(declare-fun __r_E_01.tally () (_ BitVec 16))
(declare-fun r_E_01.tally () (_ BitVec 16))
(declare-fun flit_to_watch () (_ BitVec 16))
(declare-fun r_E_01.id () (_ BitVec 16))
(declare-fun r_E_01.has_flit () Bool)
(declare-fun |r_W_10.assigned:2| () Bool)
(declare-fun |r_W_10.assigned:3| () Bool)
(declare-fun |r_W_10.assigned:0| () Bool)
(declare-fun |r_W_10.assigned:1| () Bool)
(declare-fun r_S_11.has_flit () Bool)
(declare-fun r_W_10.has_flit () Bool)
(assert
 (let (($x44 (= r_E_01.id flit_to_watch)))
 (let (($x365 (and (and |r_W_10.assigned:3| (and |r_W_10.assigned:2| true)) (and true (and false true)))))
 (let (($x63 (and (= |r_W_10.assigned:3| true) (= |r_W_10.assigned:2| false) (= |r_W_10.assigned:1| true) (= |r_W_10.assigned:0| true))))
 (let (($x335 (and (and |r_W_10.assigned:3| (and |r_W_10.assigned:2| true)) (and false (and false true)))))
 (let (($x78 (and (= |r_W_10.assigned:3| false) (= |r_W_10.assigned:2| false) (= |r_W_10.assigned:1| false) (= |r_W_10.assigned:0| true))))
 (let (($x215 (not (and r_W_10.has_flit (or $x78 $x335) r_S_11.has_flit (or $x63 $x365)))))
 (and $x215 r_E_01.has_flit $x44 (not (and r_E_01.has_flit $x44)) (= r_E_01.tally __r_E_01.tally)))))))))
(assert
 (and (not or)))
(check-sat)
