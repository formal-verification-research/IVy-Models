; benchmark generated from python API
(set-info :status unknown)
(declare-sort flit)
 (declare-fun |__fml:f| () flit)
(declare-fun |__new_fml:f_a| () flit)
(declare-fun arb_E_00.counter () Int)
(declare-fun arb_S_11.counter () Int)
(declare-fun arb_W_10.counter () Int)
(declare-fun arb_N_10.counter () Int)
(declare-fun |__fml:a:1| () Bool)
(declare-fun |__fml:a:2| () Bool)
(declare-fun |__new_fml:a_a:1| () Bool)
(declare-fun |__new_fml:a_a:2| () Bool)
(declare-fun |__fml:a:0| () Bool)
(declare-fun |__new_fml:a_a:0| () Bool)
(declare-fun |__fml:r:2| () Bool)
(declare-fun |__new_fml:r_a:2| () Bool)
(declare-fun |__fml:r:0| () Bool)
(declare-fun |__new_fml:r_a:0| () Bool)
(declare-fun |__fml:r:1| () Bool)
(declare-fun |__new_fml:r_a:1| () Bool)
(declare-fun r_S_11.has_flit () Bool)
(declare-fun r_N_10.has_flit () Bool)
(declare-fun r_E_00.has_flit () Bool)
(declare-fun r_W_10.has_flit () Bool)
(declare-fun r_PE_10.has_flit () Bool)
(declare-fun r_PE_10.ready () Bool)
(assert
 (let (($x109 (and (and |__new_fml:a_a:2| (and |__new_fml:a_a:1| true)) (and |__fml:a:2| (and |__fml:a:1| true)))))
 (let (($x61 (and (= |__new_fml:a_a:2| |__fml:a:2|) (= |__new_fml:a_a:1| |__fml:a:1|) (= |__new_fml:a_a:0| |__fml:a:0|))))
 (let (($x39 (and (= |__new_fml:r_a:2| |__fml:r:2|) (= |__new_fml:r_a:1| |__fml:r:1|) (= |__new_fml:r_a:0| |__fml:r:0|))))
 (let (($x147 (or r_PE_10.has_flit r_W_10.has_flit r_E_00.has_flit r_N_10.has_flit r_S_11.has_flit)))
 (and (< arb_N_10.counter 5) (< arb_W_10.counter 5) (< arb_S_11.counter 5) (< arb_E_00.counter 5) r_PE_10.has_flit r_PE_10.ready (not $x147) (= |__new_fml:f_a| |__fml:f|) (or $x39 (and (and |__new_fml:r_a:2| true) (and |__fml:r:2| true))) (or $x61 $x109)))))))
(assert
 (and (not or)))
(check-sat)
